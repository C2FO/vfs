name: golangci-lint
on:
  pull_request:
    branches:
      - main
      - v6

permissions:
  # Required: allow read access to the content for analysis.
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
  # Optional: allow write access to checks to allow the action to annotate code in the PR.
  checks: write

jobs:
  detect-modules:
    name: detect-modules
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - id: set-modules
        run: |
          # Find all directories containing go.mod files
          modules=$(find . -name "go.mod" -type f | sed 's|/go.mod$||' | sort)

          # Convert to JSON array - ensure proper JSON format
          echo "$modules" | jq -R . | jq -s -c . > modules.json

          echo "Found modules:"
          cat modules.json | jq -r '.[]'

          # Set output with compact JSON
          echo "modules=$(cat modules.json)" >> $GITHUB_OUTPUT

  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    needs: detect-modules
    strategy:
      matrix:
        module: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - uses: actions/checkout@v4
      - name: golangci-lint
        # the action below uses golangci/golangci-lint-action@v8.0.0
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          args: --config=${{ github.workspace }}/.golangci.yml --timeout=10m --build-tags=vfsintegration

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true
          working-directory: ${{ matrix.module }}
